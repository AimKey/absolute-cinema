name: PublishForCICD # Name of the GitHub Actions workflow.

on: # Events that trigger the workflow.
  workflow_dispatch: # Allows manual triggering of the workflow.
  push: # Triggers the workflow on a push event.
    branches: # Specifies which branches will trigger the workflow.
      - main # The 'main' branch.you can change branch as you need

env:
  azure_webApp_name: absolute-cinema
  azure_webApp_packagePath: "./publish"

jobs: # Defines the jobs in the workflow.
  publish: # The 'publish' job.
    runs-on: ubuntu-latest # The type of runner that the job will run on.
    environment: production # The name of this env

    steps: # Steps for the 'publish' job.
      - name: Checkout code # Checks out the repository code.
        uses: actions/checkout@v3

      - name: Setup .NET # Sets up the .NET environment.
        uses: actions/setup-dotnet@v3
        with: 
          dotnet-version: '8.0.x' # The .NET version to use.

      - name: Restore dependencies # Restores the NuGet packages.
        run: dotnet restore ./Absolute-cinema.sln

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: ./Absolute-cinema/package-lock.json
          
      - name: Setup node_modules # Setup the node_modules (including tailwind)
        run: npm ci # This command is used in automated environment. Read more here: https://stackoverflow.com/questions/52499617/what-is-the-difference-between-npm-install-and-npm-ci
        working-directory: ./Absolute-cinema

      - name: Build # Builds the project.
        run: dotnet build ./Absolute-cinema.sln --configuration Release --no-restore

      - name: Publish # Publishes the project's build artifacts.
        run: dotnet publish ./Absolute-cinema.sln --configuration Release --no-build --output "${{env.azure_webApp_packagePath}}"

      - name: Deploy to azure webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{env.azure_webApp_name}}
          package: "${{env.azure_webApp_packagePath}}"
          publish-profile: ${{secrets.AZURE_PUBLISH_PROFILE}}
