@model List<Absolute_cinema.Models.ViewModels.MovieVM>
@{
    ViewData["Title"] = "Danh Sách Phim";
    var allTags = ViewBag.AllTags as List<Absolute_cinema.Models.ViewModels.TagVM>;
    var selectedTags = ViewBag.SelectedTags as string[];
}

<!-- Hero Section with Search -->
<section class="relative bg-gradient-to-r from-gray-900 via-red-900 to-gray-900 py-20">
    <div class="absolute inset-0 bg-black/50"></div>
    <div class="relative container mx-auto px-4 text-center">
        <h1 class="text-5xl font-bold text-white mb-6 animate-fade-in">
            <i class="fas fa-film text-red-500 mr-4"></i>
            Kho Phim Khổng Lồ
        </h1>
        <p class="text-xl text-gray-300 mb-8 animate-slide-up">
            Khám phá hàng ngàn bộ phim chất lượng cao từ khắp nơi trên thế giới
        </p>
        
        <!-- Advanced Search Form -->
        <form method="get" class="max-w-6xl mx-auto animate-scale-in" id="searchForm">
            <div class="bg-black/30 backdrop-blur-md p-6 rounded-2xl border border-gray-700 space-y-6">
                <!-- Search Input -->
                <div>
                    <input type="text" name="search" value="@ViewBag.Search" 
                           placeholder="Tìm kiếm phim..." 
                           class="w-full px-4 py-3 bg-gray-800 text-white rounded-lg border border-gray-600 focus:border-red-500 focus:ring-2 focus:ring-red-500/20 transition-all duration-300">
                </div>
                
                <!-- Tags Selection -->
                <div>
                    <label class="block text-white font-semibold mb-3">
                        <i class="fas fa-tags mr-2"></i>Thể loại
                    </label>
                    <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-2">
                        @foreach (var tag in allTags)
                        {
                            <label class="tag-checkbox flex items-center space-x-2 bg-gray-800/50 hover:bg-gray-700/50 p-3 rounded-lg cursor-pointer transition-all duration-300 hover:scale-105 @(selectedTags.Contains(tag.Name) ? "ring-2 ring-red-500 bg-red-500/20" : "")">
                                <input type="checkbox" name="tags" value="@tag.Name" 
                                       @(selectedTags.Contains(tag.Name) ? "checked" : "")
                                       class="hidden tag-input">
                                <div class="tag-indicator w-4 h-4 rounded-full border-2 border-gray-400 flex items-center justify-center transition-all duration-300"
                                     style="border-color: @tag.Color">
                                    <i class="fas fa-check text-xs text-white opacity-0 transition-opacity duration-300"></i>
                                </div>
                                <span class="text-sm text-gray-300 font-medium">@tag.Name</span>
                            </label>
                        }
                    </div>
                </div>
                
                <!-- Other Filters -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <!-- Country Filter -->
                    <div>
                        <select name="country" class="w-full px-4 py-3 bg-gray-800 text-white rounded-lg border border-gray-600 focus:border-red-500 focus:ring-2 focus:ring-red-500/20 transition-all duration-300">
                            <option value="">Tất cả quốc gia</option>
                            <option value="Mỹ">Mỹ</option>
                            <option value="Hàn Quốc">Hàn Quốc</option>
                            <option value="Nhật Bản">Nhật Bản</option>
                            <option value="Trung Quốc">Trung Quốc</option>
                            <option value="Việt Nam">Việt Nam</option>
                        </select>
                    </div>
                    
                    <!-- Quality Filter -->
                    <div>
                        <select name="quality" class="w-full px-4 py-3 bg-gray-800 text-white rounded-lg border border-gray-600 focus:border-red-500 focus:ring-2 focus:ring-red-500/20 transition-all duration-300">
                            <option value="">Tất cả chất lượng</option>
                            <option value="4K">4K Ultra HD</option>
                            <option value="HD">HD</option>
                            <option value="CAM">CAM</option>
                        </select>
                    </div>
                    
                    <!-- Search Button -->
                    <div>
                        <button type="submit" class="w-full bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white px-6 py-3 rounded-lg font-semibold transition-all duration-300 hover:scale-105 hover:shadow-glow-lg">
                            <i class="fas fa-search mr-2"></i>Tìm kiếm
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</section>

<!-- Active Filters Display -->
@if (!string.IsNullOrEmpty(ViewBag.Search) || selectedTags.Any() || !string.IsNullOrEmpty(ViewBag.Country) || !string.IsNullOrEmpty(ViewBag.Quality))
{
    <section class="bg-gray-800 py-4">
        <div class="container mx-auto px-4">
            <div class="flex flex-wrap items-center gap-2">
                <span class="text-gray-300 font-medium">
                    <i class="fas fa-filter mr-2"></i>Bộ lọc hiện tại:
                </span>
                
                @if (!string.IsNullOrEmpty(ViewBag.Search))
                {
                    <span class="filter-tag bg-red-500/20 text-red-300 px-3 py-1 rounded-full text-sm border border-red-500/30 flex items-center">
                        <i class="fas fa-search mr-2"></i>@ViewBag.Search
                        <a href="@Url.Action("Index", new { tags = selectedTags, country = ViewBag.Country, quality = ViewBag.Quality })" 
                           class="ml-2 hover:text-white transition-colors duration-300">×</a>
                    </span>
                }
                
                @foreach (var tag in selectedTags)
                {
                    var tagColor = allTags.FirstOrDefault(t => t.Name == tag)?.Color ?? "#6b7280";
                    <span class="filter-tag px-3 py-1 rounded-full text-sm border flex items-center text-white"
                          style="background-color: @(tagColor)20; border-color: @(tagColor)50; color: @tagColor">
                        <i class="fas fa-tag mr-2"></i>@tag
                        <a href="@Url.Action("Index", new { search = ViewBag.Search, tags = selectedTags.Where(t => t != tag).ToArray(), country = ViewBag.Country, quality = ViewBag.Quality })" 
                           class="ml-2 hover:text-white transition-colors duration-300">×</a>
                    </span>
                }
                
                @if (!string.IsNullOrEmpty(ViewBag.Country))
                {
                    <span class="filter-tag bg-green-500/20 text-green-300 px-3 py-1 rounded-full text-sm border border-green-500/30 flex items-center">
                        <i class="fas fa-globe mr-2"></i>@ViewBag.Country
                        <a href="@Url.Action("Index", new { search = ViewBag.Search, tags = selectedTags, quality = ViewBag.Quality })" 
                           class="ml-2 hover:text-white transition-colors duration-300">×</a>
                    </span>
                }
                
                @if (!string.IsNullOrEmpty(ViewBag.Quality))
                {
                    <span class="filter-tag bg-blue-500/20 text-blue-300 px-3 py-1 rounded-full text-sm border border-blue-500/30 flex items-center">
                        <i class="fas fa-hd-video mr-2"></i>@ViewBag.Quality
                        <a href="@Url.Action("Index", new { search = ViewBag.Search, tags = selectedTags, country = ViewBag.Country })" 
                           class="ml-2 hover:text-white transition-colors duration-300">×</a>
                    </span>
                }
                
                <a href="@Url.Action("Index")" class="text-gray-400 hover:text-red-400 text-sm ml-2 transition-colors duration-300">
                    <i class="fas fa-times mr-1"></i>Xóa tất cả
                </a>
            </div>
        </div>
    </section>
}

<!-- Movies Grid -->
<section class="py-12 bg-gray-900">
    <div class="container mx-auto px-4">
        <!-- Results Info -->
        <div class="flex justify-between items-center mb-8">
            <h2 class="text-2xl font-bold text-white">
                <i class="fas fa-film text-red-500 mr-2"></i>
                Tìm thấy @Model.Count() phim
            </h2>
            
            <!-- Sort Options -->
            <div class="flex items-center space-x-4">
                <span class="text-gray-400">Sắp xếp:</span>
                <select class="bg-gray-800 text-white px-4 py-2 rounded-lg border border-gray-600 focus:border-red-500 transition-all duration-300">
                    <option>Mới nhất</option>
                    <option>Đánh giá cao</option>
                    <option>Xem nhiều</option>
                    <option>Tên A-Z</option>
                </select>
            </div>
        </div>

        @if (Model.Any())
        {
            <!-- Movies Grid -->
            <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-6">
                @foreach (var movie in Model)
                {
                    <div class="movie-card group relative bg-gray-800 rounded-lg overflow-hidden hover:scale-105 transition-all duration-300 hover:shadow-2xl hover:shadow-red-500/20">
                        <!-- Movie Poster -->
                        <div class="relative aspect-[3/4] overflow-hidden">
                            <img src="@movie.PosterURL" alt="@movie.Title" 
                                 class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500">
                            
                            <!-- Overlay -->
                            <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                <!-- Play Button -->
                                <div class="absolute inset-0 flex items-center justify-center">
                                    <button class="bg-red-500 hover:bg-red-600 text-white w-16 h-16 rounded-full flex items-center justify-center transform scale-0 group-hover:scale-100 transition-transform duration-300 hover:scale-110">
                                        <i class="fas fa-play ml-1"></i>
                                    </button>
                                </div>
                                
                                <!-- Movie Info Overlay -->
                                <div class="absolute bottom-0 left-0 right-0 p-4 transform translate-y-full group-hover:translate-y-0 transition-transform duration-300">
                                    <div class="space-y-2">
                                        <!-- Tags -->
                                        <div class="flex flex-wrap gap-1">
                                            @foreach (var tagName in movie.MovieTags.Take(3))
                                            {
                                                var tag = allTags.FirstOrDefault(t => t.MovieTags == tagName);
                                                if (tag != null)
                                                {
                                                    <span class="px-2 py-1 rounded text-xs font-semibold text-white"
                                                          style="background-color: @tag.Color">
                                                        @tag.Name
                                                    </span>
                                                }
                                            }
                                            @if (movie.MovieTags.Count > 3)
                                            {
                                                <span class="bg-gray-600 px-2 py-1 rounded text-xs font-semibold text-white">
                                                    +@(movie.MovieTags.Count - 3)
                                                </span>
                                            }
                                        </div>
                                        
                                        <p class="text-white text-xs line-clamp-2">@movie.Description</p>
                                        <div class="flex items-center justify-between text-xs text-gray-300">
                                            <span><i class="fas fa-clock mr-1"></i>@movie.Duration phút</span>
                                            <span><i class="fas fa-eye mr-1"></i>@movie.ViewCount.ToString("N0")</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Top Badges -->
                            <div class="absolute top-2 left-2 space-y-1">
                                @if (movie.IsFeatured)
                                {
                                    <span class="bg-gradient-to-r from-yellow-400 to-orange-500 text-black px-2 py-1 rounded-full text-xs font-bold">
                                        <i class="fas fa-star mr-1"></i>HOT
                                    </span>
                                }
                                @if (movie.IsNewRelease)
                                {
                                    <span class="bg-gradient-to-r from-green-400 to-blue-500 text-white px-2 py-1 rounded-full text-xs font-bold">
                                        NEW
                                    </span>
                                }
                            </div>
                            
                            <!-- Rating -->
                            <div class="absolute top-2 right-2">
                                <div class="bg-black/70 backdrop-blur-sm px-2 py-1 rounded-full flex items-center space-x-1">
                                    <i class="fas fa-star text-yellow-400 text-xs"></i>
                                    <span class="text-white text-xs font-semibold">@movie.ImdbRating</span>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Movie Info -->
                        <div class="p-4">
                            <h3 class="text-white font-semibold text-sm mb-2 line-clamp-2 group-hover:text-red-400 transition-colors duration-300">
                                @movie.Title
                            </h3>
                            
                            <!-- Tags Display -->
                            <div class="flex flex-wrap gap-1 mb-2">
                                @foreach (var tagName in movie.MovieTags.Take(2))
                                {
                                    var tag = allTags.FirstOrDefault(t => t.MovieTags == tagName);
                                    if (tag != null)
                                    {
                                        <span class="px-2 py-1 rounded text-xs text-white"
                                              style="background-color: @(tag.Color)80;">
                                            @tag.Name
                                        </span>
                                    }
                                }
                                @if (movie.MovieTags.Count > 2)
                                {
                                    <span class="bg-gray-600 px-2 py-1 rounded text-xs text-white"
                                          title="@string.Join(", ", movie.MovieTags.Skip(2))">
                                        +@(movie.MovieTags.Count - 2)
                                    </span>
                                }
                            </div>
                            
                            <div class="space-y-2 text-xs text-gray-400">
                                <div class="flex items-center justify-between">
                                    <span class="flex items-center">
                                        <i class="fas fa-calendar mr-1"></i>
                                        @movie.ReleaseDate.Year
                                    </span>
                                    <span class="flex items-center">
                                        <i class="fas fa-globe mr-1"></i>
                                        @movie.Country
                                    </span>
                                </div>
                                
                                <div class="flex items-center justify-between">
                                    <span class="bg-gray-700 px-2 py-1 rounded text-xs">@movie.Quality</span>
                                    @if (!movie.IsFree)
                                    {
                                        <span class="text-red-400 font-semibold">@movie.Price.ToString("N0")đ</span>
                                    }
                                    else
                                    {
                                        <span class="text-green-400 font-semibold">Miễn phí</span>
                                    }
                                </div>
                            </div>
                        </div>
                        
                        <!-- Action Buttons -->
                        <div class="absolute inset-x-0 bottom-0 p-4 bg-gradient-to-t from-black/90 to-transparent transform translate-y-full group-hover:translate-y-0 transition-transform duration-300">
                            <div class="flex space-x-2">
                                <button class="flex-1 bg-red-500 hover:bg-red-600 text-white py-2 px-3 rounded text-xs font-semibold transition-colors duration-300">
                                    <i class="fas fa-play mr-1"></i>Xem ngay
                                </button>
                                <button class="bg-gray-700 hover:bg-gray-600 text-white p-2 rounded transition-colors duration-300">
                                    <i class="fas fa-heart"></i>
                                </button>
                                <button class="bg-gray-700 hover:bg-gray-600 text-white p-2 rounded transition-colors duration-300">
                                    <i class="fas fa-bookmark"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <!-- No Results -->
            <div class="text-center py-20">
                <div class="text-6xl text-gray-600 mb-4">
                    <i class="fas fa-film"></i>
                </div>
                <h3 class="text-2xl font-bold text-white mb-4">Không tìm thấy phim nào</h3>
                <p class="text-gray-400 mb-8">Thử thay đổi từ khóa tìm kiếm hoặc bộ lọc của bạn</p>
                <a href="@Url.Action("Index")" class="bg-red-500 hover:bg-red-600 text-white px-6 py-3 rounded-lg font-semibold transition-all duration-300 hover:scale-105">
                    <i class="fas fa-refresh mr-2"></i>Xem tất cả phim
                </a>
            </div>
        }
    </div>
</section>

<!-- Pagination -->
@if (ViewBag.TotalPages > 1)
{
    <section class="bg-gray-800 py-8">
        <div class="container mx-auto px-4">
            <div class="flex justify-center items-center space-x-2">
                <!-- Previous Button -->
                @if (ViewBag.CurrentPage > 1)
                {
                    <a href="@Url.Action("Index", new { search = ViewBag.Search, tags = selectedTags, country = ViewBag.Country, quality = ViewBag.Quality, page = ViewBag.CurrentPage - 1 })" 
                       class="bg-gray-700 hover:bg-red-500 text-white px-4 py-2 rounded-lg transition-all duration-300 hover:scale-105">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                }
                
                <!-- Page Numbers -->
                @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                {
                    @if (i == ViewBag.CurrentPage)
                    {
                        <span class="bg-red-500 text-white px-4 py-2 rounded-lg font-semibold">@i</span>
                    }
                    else
                    {
                        <a href="@Url.Action("Index", new { search = ViewBag.Search, tags = selectedTags, country = ViewBag.Country, quality = ViewBag.Quality, page = i })" 
                           class="bg-gray-700 hover:bg-red-500 text-white px-4 py-2 rounded-lg transition-all duration-300 hover:scale-105">@i</a>
                    }
                }
                
                <!-- Next Button -->
                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <a href="@Url.Action("Index", new { search = ViewBag.Search, tags = selectedTags, country = ViewBag.Country, quality = ViewBag.Quality, page = ViewBag.CurrentPage + 1 })" 
                       class="bg-gray-700 hover:bg-red-500 text-white px-4 py-2 rounded-lg transition-all duration-300 hover:scale-105">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                }
            </div>
            
            <!-- Page Info -->
            <div class="text-center mt-4 text-gray-400">
                Trang @ViewBag.CurrentPage / @ViewBag.TotalPages
            </div>
        </div>
    </section>
}

<!-- Quick Actions Floating Button -->
<div class="fixed bottom-6 right-6 z-40">
    <div class="relative group">
        <button class="bg-red-500 hover:bg-red-600 text-white w-14 h-14 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-110">
            <i class="fas fa-filter"></i>
        </button>
        
        <!-- Quick Filter Menu -->
        <div class="absolute bottom-16 right-0 bg-gray-800 rounded-lg shadow-xl p-4 w-48 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform scale-95 group-hover:scale-100">
            <h4 class="text-white font-semibold mb-3">Lọc nhanh</h4>
            <div class="space-y-2">
                <a href="@Url.Action("Index", new { genre = "Hành động" })" class="block text-gray-300 hover:text-white text-sm py-1 hover:translate-x-1 transition-all duration-300">
                    <i class="fas fa-fist-raised mr-2"></i>Phim hành động
                </a>
                <a href="@Url.Action("Index", new { country = "Hàn Quốc" })" class="block text-gray-300 hover:text-white text-sm py-1 hover:translate-x-1 transition-all duration-300">
                    <i class="fas fa-flag mr-2"></i>Phim Hàn Quốc
                </a>
                <a href="@Url.Action("Index", new { quality = "4K" })" class="block text-gray-300 hover:text-white text-sm py-1 hover:translate-x-1 transition-all duration-300">
                    <i class="fas fa-hd-video mr-2"></i>Chất lượng 4K
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle tag checkbox styling
            const tagCheckboxes = document.querySelectorAll('.tag-checkbox');
            
            tagCheckboxes.forEach(checkbox => {
                const input = checkbox.querySelector('.tag-input');
                const indicator = checkbox.querySelector('.tag-indicator');
                const checkIcon = indicator.querySelector('i');
                
                function updateCheckbox() {
                    if (input.checked) {
                        indicator.style.backgroundColor = indicator.style.borderColor;
                        checkIcon.style.opacity = '1';
                        checkbox.classList.add('ring-2', 'ring-red-500', 'bg-red-500/20');
                    } else {
                        indicator.style.backgroundColor = 'transparent';
                        checkIcon.style.opacity = '0';
                        checkbox.classList.remove('ring-2', 'ring-red-500', 'bg-red-500/20');
                    }
                }
                
                updateCheckbox();
                
                checkbox.addEventListener('click', function(e) {
                    if (e.target !== input) {
                        input.checked = !input.checked;
                        updateCheckbox();
                    }
                });
                
                input.addEventListener('change', updateCheckbox);
            });
            
            // Auto-submit form when filters change
            const form = document.getElementById('searchForm');
            const selects = form.querySelectorAll('select');
            const checkboxes = form.querySelectorAll('input[type="checkbox"]');
            
            selects.forEach(select => {
                select.addEventListener('change', () => {
                    setTimeout(() => form.submit(), 300);
                });
            });
            
            // Add smooth animations for movie cards
            const movieCards = document.querySelectorAll('.movie-card');
            
            const observer = new IntersectionObserver((entries) => {
                entries.forEach((entry, index) => {
                    if (entry.isIntersecting) {
                        setTimeout(() => {
                            entry.target.classList.add('animate-fade-in');
                        }, index * 100);
                    }
                });
            }, { threshold: 0.1 });
            
            movieCards.forEach(card => {
                observer.observe(card);
            });
        });
    </script>
}
