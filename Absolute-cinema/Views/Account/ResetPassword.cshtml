@model Absolute_cinema.Models.ViewModels.ResetPasswordViewModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ƒê·∫∑t L·∫°i M·∫≠t Kh·∫©u - Absolute Cinema</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="~/css/auth.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .reset-form {
            max-width: 500px;
            margin: 0 auto;
            padding: 40px;
        }
        .form-header {
            text-align: center;
            margin-bottom: 30px;
        }
        .form-title {
            color: #333;
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 10px;
        }
        .form-subtitle {
            color: #666;
            font-size: 1rem;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #333;
        }
        .form-control {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s ease;
        }
        .password-field {
            position: relative;
        }
        .password-toggle {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: #666;
            cursor: pointer;
            padding: 5px;
        }
        .form-control:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        .btn-primary {
            width: 100%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 14px 24px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }
        .password-requirements {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-size: 14px;
        }
        .password-requirements ul {
            margin: 0;
            padding-left: 20px;
        }
        .password-requirements li {
            margin-bottom: 5px;
        }
        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 8px;
        }
        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .text-danger {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 5px;
        }
        .email-info {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="auth-container">
        <div class="auth-card">
            <div class="auth-info">
                <div class="auth-info-content">
                    <div class="cinema-logo">üé¨ ABSOLUTE CINEMA</div>
                    <div class="cinema-tagline">T·∫°o m·∫≠t kh·∫©u m·ªõi an to√†n v√† m·∫°nh</div>
                    
                    <ul class="cinema-features">
                        <li>üîí M·∫≠t kh·∫©u m·ªõi ph·∫£i kh√°c m·∫≠t kh·∫©u c≈©</li>
                        <li>üìè √çt nh·∫•t 6 k√Ω t·ª±</li>
                        <li>üîê B·∫£o m·∫≠t v√† an to√†n</li>
                        <li>‚úÖ X√°c nh·∫≠n m·∫≠t kh·∫©u ƒë·ªÉ ƒë·∫£m b·∫£o ch√≠nh x√°c</li>
                    </ul>
                </div>
            </div>
            
            <div class="auth-form">
                <div class="reset-form">
                    <div class="form-header">
                        <h1 class="form-title">ƒê·∫∑t L·∫°i M·∫≠t Kh·∫©u</h1>
                        <p class="form-subtitle">T·∫°o m·∫≠t kh·∫©u m·ªõi cho t√†i kho·∫£n c·ªßa b·∫°n</p>
                    </div>

                    <div class="email-info">
                        <i class="fas fa-envelope"></i>
                        <strong>@Model.Email</strong>
                    </div>

                    <div class="password-requirements">
                        <strong>Y√™u c·∫ßu m·∫≠t kh·∫©u:</strong>
                        <ul>
                            <li>√çt nh·∫•t 6 k√Ω t·ª±</li>
                            <li>Kh√¥ng ƒë∆∞·ª£c tr√πng v·ªõi m·∫≠t kh·∫©u c≈©</li>
                            <li>N√™n s·ª≠ d·ª•ng k·∫øt h·ª£p ch·ªØ, s·ªë v√† k√Ω t·ª± ƒë·∫∑c bi·ªát</li>
                        </ul>
                    </div>

                    @if (ViewData.ModelState.Any(x => x.Value.Errors.Count > 0))
                    {
                        <div class="alert alert-danger">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <div>@error.ErrorMessage</div>
                            }
                        </div>
                    }

                    <form asp-action="ResetPassword" method="post">
                        <input asp-for="Email" type="hidden" />
                        <input asp-for="Otp" type="hidden" />
                        
                        <div class="form-group">
                            <label asp-for="NewPassword" class="form-label">
                                <i class="fas fa-lock"></i> M·∫≠t kh·∫©u m·ªõi
                            </label>
                            <div class="password-field">
                                <input asp-for="NewPassword" type="password" class="form-control" placeholder="Nh·∫≠p m·∫≠t kh·∫©u m·ªõi" />
                                <button type="button" class="password-toggle" onclick="togglePassword('NewPassword')">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="ConfirmNewPassword" class="form-label">
                                <i class="fas fa-lock"></i> X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi
                            </label>
                            <div class="password-field">
                                <input asp-for="ConfirmNewPassword" type="password" class="form-control" placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u m·ªõi" />
                                <button type="button" class="password-toggle" onclick="togglePassword('ConfirmNewPassword')">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                        </div>

                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> ƒê·∫∑t L·∫°i M·∫≠t Kh·∫©u
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        function togglePassword(fieldName) {
            const field = document.querySelector(`input[name="${fieldName}"]`);
            const button = field.nextElementSibling;
            const icon = button.querySelector('i');
            
            if (field.type === 'password') {
                field.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                field.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        // Password strength indicator
        const newPasswordInput = document.querySelector('input[name="NewPassword"]');
        const confirmPasswordInput = document.querySelector('input[name="ConfirmNewPassword"]');

        function validatePasswordMatch() {
            if (confirmPasswordInput.value && newPasswordInput.value !== confirmPasswordInput.value) {
                confirmPasswordInput.style.borderColor = '#dc3545';
            } else {
                confirmPasswordInput.style.borderColor = '#e1e5e9';
            }
        }

        newPasswordInput.addEventListener('input', validatePasswordMatch);
        confirmPasswordInput.addEventListener('input', validatePasswordMatch);
    </script>
</body>
</html>
